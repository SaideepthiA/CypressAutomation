{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-07T11:51:10.090Z",
    "end": "2022-03-07T11:51:13.405Z",
    "duration": 3315,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "aa6e0652-2cc2-49d5-bd13-0d09991d1cbb",
      "title": "",
      "fullFile": "cypress/integration/API_Automation.feature",
      "file": "cypress/integration/API_Automation.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "650977ec-d85c-4c9b-bb00-ddbabd49f3ef",
          "title": "API Automation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET API to open the page",
              "fullTitle": "API Automation GET API to open the page",
              "timedOut": null,
              "duration": 946,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "59f31df0-09ce-4707-aa60-da037cffceb6",
              "parentUUID": "650977ec-d85c-4c9b-bb00-ddbabd49f3ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST API to register",
              "fullTitle": "API Automation POST API to register",
              "timedOut": null,
              "duration": 388,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c168aad6-47e4-44d2-ac1c-ca578f25b70e",
              "parentUUID": "650977ec-d85c-4c9b-bb00-ddbabd49f3ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT API to edit",
              "fullTitle": "API Automation PUT API to edit",
              "timedOut": null,
              "duration": 356,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c909c87a-6288-490c-82f1-5b39566b20de",
              "parentUUID": "650977ec-d85c-4c9b-bb00-ddbabd49f3ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE API to delete",
              "fullTitle": "API Automation DELETE API to delete",
              "timedOut": null,
              "duration": 352,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e480addc-4a76-4448-b6c5-1114db403576",
              "parentUUID": "650977ec-d85c-4c9b-bb00-ddbabd49f3ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "No Input -POST",
              "fullTitle": "API Automation No Input -POST",
              "timedOut": null,
              "duration": 199,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7394073c-4df4-4041-ac09-b1678eaa9dd0",
              "parentUUID": "650977ec-d85c-4c9b-bb00-ddbabd49f3ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Already registered mail - POST",
              "fullTitle": "API Automation Already registered mail - POST",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "79db5948-2b1a-43ba-bbd4-7ef97e73dbda",
              "parentUUID": "650977ec-d85c-4c9b-bb00-ddbabd49f3ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Parameters - POST",
              "fullTitle": "API Automation Missing Parameters - POST",
              "timedOut": null,
              "duration": 404,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8beb3c88-472d-43e1-90ce-3ce9ebc451a6",
              "parentUUID": "650977ec-d85c-4c9b-bb00-ddbabd49f3ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "InvalidInputs - GET",
              "fullTitle": "API Automation InvalidInputs - GET",
              "timedOut": null,
              "duration": 292,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e2804607-edff-4dec-9b80-9844b9619ff9",
              "parentUUID": "650977ec-d85c-4c9b-bb00-ddbabd49f3ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "59f31df0-09ce-4707-aa60-da037cffceb6",
            "c168aad6-47e4-44d2-ac1c-ca578f25b70e",
            "c909c87a-6288-490c-82f1-5b39566b20de",
            "e480addc-4a76-4448-b6c5-1114db403576",
            "7394073c-4df4-4041-ac09-b1678eaa9dd0",
            "79db5948-2b1a-43ba-bbd4-7ef97e73dbda",
            "8beb3c88-472d-43e1-90ce-3ce9ebc451a6",
            "e2804607-edff-4dec-9b80-9844b9619ff9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3100,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "reportFilename": "report",
        "html": true,
        "json": true,
        "charts": true
      },
      "version": "6.0.1"
    }
  }
}