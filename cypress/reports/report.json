{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-29T18:18:12.275Z",
    "end": "2021-12-29T18:19:27.958Z",
    "duration": 75683,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c7501cf1-f296-41fa-9f2f-a599f2c2fc8d",
      "title": "",
      "fullFile": "cypress/integration/Login.feature",
      "file": "cypress/integration/Login.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d8bdbf7f-d69a-433b-a5d7-9f698b2ca061",
          "title": "Customer Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Customer Login - Page Navigation",
              "fullTitle": "Customer Login Customer Login - Page Navigation",
              "timedOut": null,
              "duration": 25948,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0b0144e6-9451-468d-956c-0f63069bf0d2",
              "parentUUID": "d8bdbf7f-d69a-433b-a5d7-9f698b2ca061",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Customer Login - New customer",
              "fullTitle": "Customer Login Customer Login - New customer",
              "timedOut": null,
              "duration": 6893,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "76f45a37-4c97-468e-87a5-9d79c17c997f",
              "parentUUID": "d8bdbf7f-d69a-433b-a5d7-9f698b2ca061",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Customer Login - Successful login",
              "fullTitle": "Customer Login Customer Login - Successful login",
              "timedOut": null,
              "duration": 6125,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ffcc03ae-fba1-4e49-9b39-e96debdea0b6",
              "parentUUID": "d8bdbf7f-d69a-433b-a5d7-9f698b2ca061",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Customer Login - Mandatory Fields",
              "fullTitle": "Customer Login Customer Login - Mandatory Fields",
              "timedOut": null,
              "duration": 2996,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "413ce165-4f71-4ea0-b90c-cf37dc113b30",
              "parentUUID": "d8bdbf7f-d69a-433b-a5d7-9f698b2ca061",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Customer Login - Invalid Email Id",
              "fullTitle": "Customer Login Customer Login - Invalid Email Id",
              "timedOut": null,
              "duration": 6151,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8bd3c2e9-d66c-4915-92c7-7a64d03959ea",
              "parentUUID": "d8bdbf7f-d69a-433b-a5d7-9f698b2ca061",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Multiple customers Login (example #1)",
              "fullTitle": "Customer Login Multiple customers Login (example #1)",
              "timedOut": null,
              "duration": 5379,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2f10d3e9-c836-4ae2-b1a9-93753b4d8c82",
              "parentUUID": "d8bdbf7f-d69a-433b-a5d7-9f698b2ca061",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Multiple customers Login (example #2)",
              "fullTitle": "Customer Login Multiple customers Login (example #2)",
              "timedOut": null,
              "duration": 4973,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c07d3244-83a3-49f5-8fd2-610e00bdbe44",
              "parentUUID": "d8bdbf7f-d69a-433b-a5d7-9f698b2ca061",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b0144e6-9451-468d-956c-0f63069bf0d2",
            "76f45a37-4c97-468e-87a5-9d79c17c997f",
            "ffcc03ae-fba1-4e49-9b39-e96debdea0b6",
            "413ce165-4f71-4ea0-b90c-cf37dc113b30",
            "8bd3c2e9-d66c-4915-92c7-7a64d03959ea",
            "2f10d3e9-c836-4ae2-b1a9-93753b4d8c82",
            "c07d3244-83a3-49f5-8fd2-610e00bdbe44"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 58465,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "reportFilename": "report",
        "html": true,
        "json": true,
        "charts": true
      },
      "version": "6.0.1"
    }
  }
}