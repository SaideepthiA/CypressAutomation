{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2022-01-20T13:41:04.731Z",
    "end": "2022-01-20T13:42:32.572Z",
    "duration": 87841,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3edd2db2-4617-4e5c-a633-80302b6e4584",
      "title": "",
      "fullFile": "cypress/integration/Login.feature",
      "file": "cypress/integration/Login.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "326f8410-2edc-4c5b-94ff-4065146506e8",
          "title": "Customer Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Customer Login - Page Navigation",
              "fullTitle": "Customer Login Customer Login - Page Navigation",
              "timedOut": null,
              "duration": 33075,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "86218af6-7b39-462e-a724-5b66e2580f36",
              "parentUUID": "326f8410-2edc-4c5b-94ff-4065146506e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Customer Login - New customer",
              "fullTitle": "Customer Login Customer Login - New customer",
              "timedOut": null,
              "duration": 8944,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "50fd50d1-fa01-43b2-95e4-c600da9acbf0",
              "parentUUID": "326f8410-2edc-4c5b-94ff-4065146506e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Customer Login - Successful login",
              "fullTitle": "Customer Login Customer Login - Successful login",
              "timedOut": null,
              "duration": 8192,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5c22899f-b2d5-481d-8091-a6e9944f4838",
              "parentUUID": "326f8410-2edc-4c5b-94ff-4065146506e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Customer Login - Mandatory Fields",
              "fullTitle": "Customer Login Customer Login - Mandatory Fields",
              "timedOut": null,
              "duration": 3915,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "17ba04a0-eb19-447b-bf42-8d93182fc6b8",
              "parentUUID": "326f8410-2edc-4c5b-94ff-4065146506e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Customer Login - Invalid Email Id",
              "fullTitle": "Customer Login Customer Login - Invalid Email Id",
              "timedOut": null,
              "duration": 5133,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f94ed8e4-daae-4520-875f-fccb283c1e4b",
              "parentUUID": "326f8410-2edc-4c5b-94ff-4065146506e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Multiple customers Login (example #1)",
              "fullTitle": "Customer Login Multiple customers Login (example #1)",
              "timedOut": null,
              "duration": 8236,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ac6af047-89e7-4931-93aa-2c8b3ea011c0",
              "parentUUID": "326f8410-2edc-4c5b-94ff-4065146506e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Multiple customers Login (example #2)",
              "fullTitle": "Customer Login Multiple customers Login (example #2)",
              "timedOut": null,
              "duration": 7867,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0b4327c7-2754-4fa3-aaf5-15e30bfabdcb",
              "parentUUID": "326f8410-2edc-4c5b-94ff-4065146506e8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "86218af6-7b39-462e-a724-5b66e2580f36",
            "50fd50d1-fa01-43b2-95e4-c600da9acbf0",
            "5c22899f-b2d5-481d-8091-a6e9944f4838",
            "17ba04a0-eb19-447b-bf42-8d93182fc6b8",
            "f94ed8e4-daae-4520-875f-fccb283c1e4b",
            "ac6af047-89e7-4931-93aa-2c8b3ea011c0",
            "0b4327c7-2754-4fa3-aaf5-15e30bfabdcb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 75362,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "reportFilename": "report",
        "html": true,
        "json": true,
        "charts": true
      },
      "version": "6.0.1"
    }
  }
}